{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\Git\\\\reacts\\\\code-challenge\\\\mylivn\\\\web-test-assignment\\\\src\\\\components\\\\Search\\\\index.js\";\nimport React, { useState } from 'react';\nimport useRSSFeed from '../../hooks/useRSSFeed';\nimport API from \"../../api\";\nexport default function Search() {\n  const {\n    addError,\n    removeError,\n    updateRSSFeed\n  } = useRSSFeed();\n  const [url, setURL] = useState(\"\");\n  /**\r\n   * @const fetchRSSFeed to fetch rss feed from the given url\r\n   */\n\n  const fetchRSSFeed = async () => {\n    try {\n      if (url) {\n        const result = await API.getRSSFeedDetails(url);\n        updateRSSFeed(result.data);\n\n        if (result.data.length === 0) {\n          addError(\"No Result\", null);\n        } else if (result.error !== '') {\n          addError(result.error, null);\n        } else {\n          removeError();\n        }\n      } else {\n        addError('Enter URL to fetch the rss feed.', null);\n      }\n    } catch (err) {\n      addError(`LOAD_DATA_ERROR: ${err}`, err.response);\n    }\n  };\n  /**\r\n   * @param {Object} event event handler for form submit \r\n   */\n\n\n  const mySubmitHandler = event => {\n    event.preventDefault();\n    fetchRSSFeed();\n  };\n\n  const search = event => {\n    if (event.key === \"Enter\") {\n      fetchRSSFeed();\n      event.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => mySubmitHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setURL(e.target.value),\n    value: url,\n    onKeyPress: search,\n    onKeyDown: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"SUBMIT\")));\n}","map":{"version":3,"sources":["C:/Program Files/Git/reacts/code-challenge/mylivn/web-test-assignment/src/components/Search/index.js"],"names":["React","useState","useRSSFeed","API","Search","addError","removeError","updateRSSFeed","url","setURL","fetchRSSFeed","result","getRSSFeedDetails","data","length","error","err","response","mySubmitHandler","event","preventDefault","search","key","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,MAA2CL,UAAU,EAA3D;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AAEA;;;;AAGA,QAAMS,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,UAAIF,GAAJ,EAAS;AACL,cAAMG,MAAM,GAAG,MAAMR,GAAG,CAACS,iBAAJ,CAAsBJ,GAAtB,CAArB;AACAD,QAAAA,aAAa,CAACI,MAAM,CAACE,IAAR,CAAb;;AACA,YAAIF,MAAM,CAACE,IAAP,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1BT,UAAAA,QAAQ,CAAC,WAAD,EAAc,IAAd,CAAR;AACH,SAFD,MAGK,IAAIM,MAAM,CAACI,KAAP,KAAiB,EAArB,EAAyB;AAC1BV,UAAAA,QAAQ,CAACM,MAAM,CAACI,KAAR,EAAe,IAAf,CAAR;AACH,SAFI,MAEE;AACHT,UAAAA,WAAW;AACd;AACJ,OAXD,MAWO;AAAED,QAAAA,QAAQ,CAAC,kCAAD,EAAqC,IAArC,CAAR;AAAoD;AAChE,KAbD,CAaE,OAAOW,GAAP,EAAY;AACVX,MAAAA,QAAQ,CAAE,oBAAmBW,GAAI,EAAzB,EAA4BA,GAAG,CAACC,QAAhC,CAAR;AACH;AACJ,GAjBD;AAmBA;;;;;AAGA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAV,IAAAA,YAAY;AACf,GAHD;;AAIA,QAAMW,MAAM,GAAIF,KAAD,IAAW;AACtB,QAAIA,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACvBZ,MAAAA,YAAY;AACZS,MAAAA,KAAK,CAACC,cAAN;AACH;AACJ,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAGG,CAAD,IAAOL,eAAe,CAACK,CAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,QAFhB;AAGI,IAAA,QAAQ,EAAGA,CAAD,IAAOd,MAAM,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;AAII,IAAA,KAAK,EAAEjB,GAJX;AAKI,IAAA,UAAU,EAAEa,MALhB;AAMI,IAAA,SAAS,EAAEA,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,CADJ,CADJ;AAeH","sourcesContent":["import React, { useState } from 'react';\r\nimport useRSSFeed from '../../hooks/useRSSFeed';\r\nimport API from \"../../api\";\r\n\r\nexport default function Search() {\r\n    const { addError, removeError, updateRSSFeed } = useRSSFeed();\r\n    const [url, setURL] = useState(\"\");\r\n\r\n    /**\r\n     * @const fetchRSSFeed to fetch rss feed from the given url\r\n     */\r\n    const fetchRSSFeed = async () => {\r\n        try {\r\n            if (url) {\r\n                const result = await API.getRSSFeedDetails(url);\r\n                updateRSSFeed(result.data);\r\n                if (result.data.length === 0) {\r\n                    addError(\"No Result\", null);\r\n                }\r\n                else if (result.error !== '') {\r\n                    addError(result.error, null);\r\n                } else {\r\n                    removeError();\r\n                }\r\n            } else { addError('Enter URL to fetch the rss feed.', null) }\r\n        } catch (err) {\r\n            addError(`LOAD_DATA_ERROR: ${err}`, err.response);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Object} event event handler for form submit \r\n     */\r\n    const mySubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        fetchRSSFeed();\r\n    }\r\n    const search = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            fetchRSSFeed();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => mySubmitHandler(e)}>\r\n                <input className=\"search\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(e) => setURL(e.target.value)}\r\n                    value={url}\r\n                    onKeyPress={search}\r\n                    onKeyDown={search}\r\n                ></input>\r\n                <button type=\"submit\" className=\"btn-search\">SUBMIT</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}