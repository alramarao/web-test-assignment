{"ast":null,"code":"Array.prototype.myMap = function (callback) {\n  let newArray = [];\n  let x = this.length;\n\n  for (let i = 0; i < x; i++) {\n    let counter = callback(this[i]);\n    newArray.push(counter);\n  }\n\n  return newArray;\n};\n\nArray.prototype.myReduce = function (fn, initial) {\n  let _array = this;\n\n  let total = initial || 0;\n\n  for (let i = 0; i < _array.length; i++) {\n    total = fn(total, _array[i]);\n  }\n\n  return total;\n}; //console.log([1,2,3].myFunction(function(total,x){return total +x},10));\n\n\nArray.prototype.myFilter = function (condition, thisArg) {\n  let j = 0;\n  this.forEach((el, index) => {\n    if (condition.call(thisArg, el, index, this)) {\n      if (index !== j) {\n        this[j] = el;\n      }\n\n      j++;\n    }\n  });\n  this.length = j;\n  return this;\n}; //arr.filterInPlace(x => x > 2);","map":{"version":3,"sources":["C:/Program Files/Git/reacts/code-challenge/mylivn/rss-feed/src/common/util/Extensions.js"],"names":["Array","prototype","myMap","callback","newArray","x","length","i","counter","push","myReduce","fn","initial","_array","total","myFilter","condition","thisArg","j","forEach","el","index","call"],"mappings":"AACAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwB,UAAUC,QAAV,EAAoB;AACxC,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,CAAC,GAAG,KAAKC,MAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,EAAxB,EAA4B;AACxB,QAAIC,OAAO,GAAGL,QAAQ,CAAC,KAAKI,CAAL,CAAD,CAAtB;AACAH,IAAAA,QAAQ,CAACK,IAAT,CAAcD,OAAd;AACH;;AACD,SAAOJ,QAAP;AACH,CARD;;AASAJ,KAAK,CAACC,SAAN,CAAgBS,QAAhB,GAA2B,UAAUC,EAAV,EAAcC,OAAd,EAAuB;AAC9C,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIC,KAAK,GAAGF,OAAO,IAAI,CAAvB;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,MAAM,CAACP,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpCO,IAAAA,KAAK,GAAGH,EAAE,CAACG,KAAD,EAAQD,MAAM,CAACN,CAAD,CAAd,CAAV;AACH;;AACD,SAAOO,KAAP;AACH,CAPD,C,CAQA;;;AAEAd,KAAK,CAACC,SAAN,CAAgBc,QAAhB,GAA2B,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;AACrD,MAAIC,CAAC,GAAG,CAAR;AAEA,OAAKC,OAAL,CAAa,CAACC,EAAD,EAAKC,KAAL,KAAe;AACxB,QAAIL,SAAS,CAACM,IAAV,CAAeL,OAAf,EAAwBG,EAAxB,EAA4BC,KAA5B,EAAmC,IAAnC,CAAJ,EAA8C;AAC1C,UAAIA,KAAK,KAAKH,CAAd,EAAiB;AACb,aAAKA,CAAL,IAAUE,EAAV;AACH;;AACDF,MAAAA,CAAC;AACJ;AACJ,GAPD;AASA,OAAKZ,MAAL,GAAcY,CAAd;AACA,SAAO,IAAP;AACH,CAdD,C,CAeA","sourcesContent":["\r\nArray.prototype.myMap = function (callback) {\r\n    let newArray = [];\r\n    let x = this.length;\r\n    for (let i = 0; i < x; i++) {\r\n        let counter = callback(this[i]);\r\n        newArray.push(counter);\r\n    }\r\n    return newArray;\r\n};\r\nArray.prototype.myReduce = function (fn, initial) {\r\n    let _array = this;\r\n    let total = initial || 0;\r\n    for (let i = 0; i < _array.length; i++) {\r\n        total = fn(total, _array[i]);\r\n    }\r\n    return total;\r\n}\r\n//console.log([1,2,3].myFunction(function(total,x){return total +x},10));\r\n\r\nArray.prototype.myFilter = function (condition, thisArg) {\r\n    let j = 0;\r\n\r\n    this.forEach((el, index) => {\r\n        if (condition.call(thisArg, el, index, this)) {\r\n            if (index !== j) {\r\n                this[j] = el;\r\n            }\r\n            j++;\r\n        }\r\n    })\r\n\r\n    this.length = j;\r\n    return this;\r\n}\r\n//arr.filterInPlace(x => x > 2);"]},"metadata":{},"sourceType":"module"}